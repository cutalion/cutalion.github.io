---
layout: post
title: "Whenever: not forgotten cron job"
date: 2014-01-03 15:34
comments: true
categories: 
---

Today I'd like to save a note on how to ensure that I configured your cron jobs
properly (and that I actually did it).

When I add new job for a cron into my project, I want to document somehow when
it should be run on the server. With [whenever](https://github.com/javan/whenever) it is dead simple to do this
in tests. I will test my cron jobs anyway, so keeping all in one place seems a
right way.

Consider we want to clean up our database monthly on 1st of 'Month'. It doesn't
matter what "clean up" means here. Let it be "delete old unpaid orders" or
"delete draft posts made by anonymous users"

We've just wrote our task with test.

{% highlight ruby %}
# cron.rb
class Cron
  def self.cleanup
    # ...
  end
end


# cron_spec.rb

describe Cron
  describe '.cleanup' do
    it "should delete unpaid orders created 1 month ago or older" do
      # ...
    end
  end
end
{% endhighlight %}


Let's ensure we will run it at a right time, because we don't need to run it often:

{% highlight ruby %}
# cron_spec.rb

describe Cron

  let(:output) { `whenever -f` }

  describe '.cleanup' do
    it "should delete unpaid orders created 1 month ago or older" do
      # ...
    end

    it "should run monthly on 1st of Month at midnight" do
      cron_job = output.lines.find {|line| line.match 'Cron.cleanup'}
      cron_job.should start_with("0 0 1 * *")
    end
  end
end
{% endhighlight %}

Here we capture output of a part of crontab file generated by `whenever`,
search for a line with our task and check that it configured properly.
This test will fail if you don't add a task to `whenever` config.

{% highlight ruby %}
# config/schedule.rb

every 1.month, :at => 'midnight' do
  runner 'Cron.cleanup'
end
{% endhighlight %}
